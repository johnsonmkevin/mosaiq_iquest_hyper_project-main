.dataPointsDashBoardContainer {
  width: 100%;
  margin-top: 131px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

.datapointsContainerTemplate {
  width: 90%;
  display: flex;
  justify-content: space-between;
  padding: 8px 0px;
}

.dashBoardTitleContainerTemplate {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 10px;
}

.datapointsContainerTemplate h3 {
  font-family: "Open Sans";
  font-style: normal;
  font-weight: 400;
  font-size: 18px;
}

.datapointTitleContainer {
  display: flex;
  flex-direction: column;
  align-items: end;
  justify-content: flex-end;
  gap: 10px;
}

.flexRow {
  display: flex;
  justify-content: space-between;
}

.dashBoardTitleContainerTemplate h2 {
  font-family: "Open Sans";
  font-style: normal;
  font-weight: 700;
  font-size: 20px;
  /* line-height: 160%; */
}

.dashBoardTitleContainerTemplate h3 {
  font-family: "Open Sans";
  font-style: normal;
  font-weight: 400;
  font-size: 16px;
  /* line-height: 180%; */
}

.dataPointsDashBoardsearchContainer {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  width: px;
}

.dataPointsDashBoardsearchContainer form {
  padding: 10px 12px;
  background: #f9f9f9;
  border-radius: 8px;
}
.dataPointsDashBoardsearchContainer form input {
  width: 250px;
  background-color: transparent;
  border: none;
}

.dataPointsDashBoardsearchContainer form input::placeholder {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 300;
  font-size: 14px;
  line-height: 16px;
  color: #707070;
}

.dataPointsDashBoardsearchContainer button {
  background: none;
  color: inherit;
  border: none;
  padding: 0;
  font: inherit;
  cursor: pointer;
  outline: inherit;
}

.dataPointsDashBoardsearchContainer h3 {
  font-family: "Open Sans";
  font-style: normal;
  font-weight: 400;
  font-size: 20px;
  line-height: 27px;
}

#exportExclusive {
  gap: 25px;
}

#sortExclusive {
  gap: 15px;
}

.sortContainer {
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  cursor: pointer;
  width: 105px;
  height: 38px;
  background: #fbfbfb;
  border: 1px solid #b8b8b8;
  border-radius: 8px;
}

.sortSelector {
  box-sizing: border-box;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  padding: 10px 10px;
  gap: 4px;
  cursor: pointer;
  width: 105px;
  height: 38px;
}

.sortSelector img {
  display: block;
  padding: 0px 7px;
}

.DynamicCardContainer {
  width: 100%;
  display: flex;
  padding: 8px 0px;
}

.SelectorContainertemplate {
  display: flex;
  justify-content: space-between;
  width: 100%;
}

/* Customize the label (the container) */
.checkBoxcontainer {
  width: 10%;
  display: block;
  position: relative;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.checkBoxcontainer input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark {
  border: 1px solid #a6aab3;
  border-radius: 3px;
  position: absolute;
  top: -10px;
  left: 0;
  height: 20px;
  width: 20px;
  background-color: #eee;
}

/* On mouse-over, add a grey background color */
.checkBoxcontainer:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.checkBoxcontainer input:checked ~ .checkmark {
  background-color: #2196f3;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.checkBoxcontainer input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.checkBoxcontainer .checkmark:after {
  position: relative;
  left: 6px;
  top: 4px;
  width: 4px;
  height: 8px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}
